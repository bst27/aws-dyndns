version: '3'
services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: aws-dyndns-php-0.1
    restart: unless-stopped
    environment:
      PHP_DATE_TIMEZONE: ${PHP_DATE_TIMEZONE}
      SSL_MODE: off
      PHP_SESSION_COOKIE_SECURE: 0
      AUTORUN_ENABLED: false
    networks:
      - app-net
    volumes:
      - '.:/var/www/html'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.aws-dyndns-php.rule=Host(`${HOST_NAME}`)'
      - 'traefik.http.routers.aws-dyndns-php.entrypoints=websecure'
      - 'traefik.http.services.aws-dyndns-php.loadbalancer.server.port=80'
      - 'traefik.http.routers.aws-dyndns-php.tls=true'

  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      # redirect all HTTP to HTTPS
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      #- '--log.level=DEBUG'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080' # Traefik admin dashboard
    networks:
      - app-net
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services (read-only)
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    depends_on:
      - php

networks:
  app-net:
    driver: bridge
